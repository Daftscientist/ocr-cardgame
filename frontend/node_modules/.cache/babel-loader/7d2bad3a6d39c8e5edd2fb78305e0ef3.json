{"ast":null,"code":"import { useCallback, useState, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\n\nfunction serializeJSON(value) {\n  try {\n    return JSON.stringify(value);\n  } catch (error) {\n    throw new Error(\"@mantine/hooks use-local-storage: Failed to serialize the value\");\n  }\n}\n\nfunction deserializeJSON(value) {\n  try {\n    return JSON.parse(value);\n  } catch (e) {\n    return value;\n  }\n}\n\nfunction useLocalStorage(_ref) {\n  let {\n    key,\n    defaultValue = void 0,\n    getInitialValueInEffect = true,\n    deserialize = deserializeJSON,\n    serialize = serializeJSON\n  } = _ref;\n  const readLocalStorageValue = useCallback(skipStorage => {\n    if (typeof window === \"undefined\" || !(\"localStorage\" in window) || skipStorage) {\n      return defaultValue != null ? defaultValue : \"\";\n    }\n\n    const storageValue = window.localStorage.getItem(key);\n    return storageValue !== null ? deserialize(storageValue) : defaultValue != null ? defaultValue : \"\";\n  }, [key, defaultValue]);\n  const [value, setValue] = useState(readLocalStorageValue(getInitialValueInEffect));\n  const setLocalStorageValue = useCallback(val => {\n    if (val instanceof Function) {\n      setValue(current => {\n        const result = val(current);\n        window.localStorage.setItem(key, serialize(result));\n        window.dispatchEvent(new CustomEvent(\"mantine-local-storage\", {\n          detail: {\n            key,\n            value: val(current)\n          }\n        }));\n        return result;\n      });\n    } else {\n      window.localStorage.setItem(key, serialize(val));\n      window.dispatchEvent(new CustomEvent(\"mantine-local-storage\", {\n        detail: {\n          key,\n          value: val\n        }\n      }));\n      setValue(val);\n    }\n  }, [key]);\n  useWindowEvent(\"storage\", event => {\n    var _a;\n\n    if (event.storageArea === window.localStorage && event.key === key) {\n      setValue(deserialize((_a = event.newValue) != null ? _a : void 0));\n    }\n  });\n  useWindowEvent(\"mantine-local-storage\", event => {\n    if (event.detail.key === key) {\n      setValue(event.detail.value);\n    }\n  });\n  useEffect(() => {\n    if (defaultValue !== void 0 && value === void 0) {\n      setLocalStorageValue(defaultValue);\n    }\n  }, [defaultValue, value, setLocalStorageValue]);\n  useEffect(() => {\n    if (getInitialValueInEffect) {\n      setValue(readLocalStorageValue());\n    }\n  }, []);\n  return [value === void 0 ? defaultValue : value, setLocalStorageValue];\n}\n\nexport { useLocalStorage };","map":{"version":3,"mappings":"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","names":["serializeJSON","value","JSON","stringify","error","Error","deserializeJSON","parse","e","useLocalStorage","key","defaultValue","getInitialValueInEffect","deserialize","serialize","readLocalStorageValue","useCallback","skipStorage","window","storageValue","localStorage","getItem","setValue","useState","setLocalStorageValue","val","Function","current","result","setItem","dispatchEvent","CustomEvent","detail","useWindowEvent","event","_a","storageArea","newValue","useEffect"],"sources":["/workspaces/ocr-cardgame/frontend/node_modules/@mantine/hooks/src/use-local-storage/use-local-storage.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\ninterface UseLocalStorage<T> {\n  /** Local storage key */\n  key: string;\n\n  /** Default value that will be set if value is not found in local storage */\n  defaultValue?: T;\n\n  /** If set to true, value will be update is useEffect after mount */\n  getInitialValueInEffect?: boolean;\n\n  /** Function to serialize value into string to be save in local storage */\n  serialize?(value: T): string;\n\n  /** Function to deserialize string value from local storage to value */\n  deserialize?(value: string): T;\n}\n\nfunction serializeJSON<T>(value: T) {\n  try {\n    return JSON.stringify(value);\n  } catch (error) {\n    throw new Error('@mantine/hooks use-local-storage: Failed to serialize the value');\n  }\n}\n\nfunction deserializeJSON(value: string) {\n  try {\n    return JSON.parse(value);\n  } catch {\n    return value;\n  }\n}\n\nexport function useLocalStorage<T = string>({\n  key,\n  defaultValue = undefined,\n  getInitialValueInEffect = true,\n  deserialize = deserializeJSON,\n  serialize = serializeJSON,\n}: UseLocalStorage<T>) {\n  const readLocalStorageValue = useCallback(\n    (skipStorage?: boolean): T => {\n      if (typeof window === 'undefined' || !('localStorage' in window) || skipStorage) {\n        return (defaultValue ?? '') as T;\n      }\n\n      const storageValue = window.localStorage.getItem(key);\n\n      return storageValue !== null ? deserialize(storageValue) : ((defaultValue ?? '') as T);\n    },\n    [key, defaultValue]\n  );\n\n  const [value, setValue] = useState<T>(readLocalStorageValue(getInitialValueInEffect));\n\n  const setLocalStorageValue = useCallback(\n    (val: T | ((prevState: T) => T)) => {\n      if (val instanceof Function) {\n        setValue((current) => {\n          const result = val(current);\n          window.localStorage.setItem(key, serialize(result));\n          window.dispatchEvent(\n            new CustomEvent('mantine-local-storage', { detail: { key, value: val(current) } })\n          );\n          return result;\n        });\n      } else {\n        window.localStorage.setItem(key, serialize(val));\n        window.dispatchEvent(\n          new CustomEvent('mantine-local-storage', { detail: { key, value: val } })\n        );\n        setValue(val);\n      }\n    },\n    [key]\n  );\n\n  useWindowEvent('storage', (event) => {\n    if (event.storageArea === window.localStorage && event.key === key) {\n      setValue(deserialize(event.newValue ?? undefined));\n    }\n  });\n\n  useWindowEvent('mantine-local-storage', (event) => {\n    if (event.detail.key === key) {\n      setValue(event.detail.value);\n    }\n  });\n\n  useEffect(() => {\n    if (defaultValue !== undefined && value === undefined) {\n      setLocalStorageValue(defaultValue);\n    }\n  }, [defaultValue, value, setLocalStorageValue]);\n\n  useEffect(() => {\n    if (getInitialValueInEffect) {\n      setValue(readLocalStorageValue());\n    }\n  }, []);\n\n  return [value === undefined ? defaultValue : value, setLocalStorageValue] as const;\n}\n"]},"metadata":{},"sourceType":"module"}